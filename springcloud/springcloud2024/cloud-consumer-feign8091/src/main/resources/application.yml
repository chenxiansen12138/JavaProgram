server:
  port: 8091
  servlet:
    context-path: /feign
spring:
  application:
    name: cloud-consumer-feign
  cloud:
    consul:
      host: 192.168.1.12
      port: 8500
      discovery:
        heartbeat:
          enabled: true
    openfeign:
      client:
        config:
          #默认配置
          #          default:
          #            #连接超时时间
          #            connect-timeout: 2000
          #            #读取超时时间
          #            read-timeout: 3000
          #指定配置
          cloud-provider-payment:
            connect-timeout: 30000
            read-timeout: 30000
      httpclient:
        hc5:
          enabled: true
      #请求回应压缩
      compression:
        request:
          enabled: true
          min-request-size: 2048 #最小触发压缩的大小
          mime-types: text/xml,application/xml,application/json #触发压缩数据类型
        response:
          enabled: true
      circuitbreaker:
        enabled: true
#        group:
#          enabled: true
#Feign日志级别
logging:
  level:
    com:
      chen:
        xiansen:
          feign:
            PaymentFeignApi: trace
            GatewayFeignApi: trace

#按照次数
#resilience4j:
#  circuitbreaker:
#    configs:
#      default:
#        failure-rate-threshold: 50 #设置50%的调用失败时打开断路器,超过失败请求百分比CircuitBreaker变为OPEN状态
#        sliding-window-type: count_based #滑动窗口的类型
#        sliding-window-size: 6 #滑动窗口的大小配置count_based表示6个请求,配置TIME_BASED表示6秒
#        minimum-number-of-calls: 6 #断路器计算失败率或慢调用率之前所需的最小样本(每个滑动窗口周期).如果为10,则必须最少记录10个样本,然后才能计算失败率,如果只记录了9次调用,即便9次都失败,断路器也不会开启
#        automatic-transition-from-open-to-half-open-enabled: true #是否启用自动从开启状态到半开状态,默认值为true,如果开启,则会在某一指定的时间节点开启部分请求,用来测试整个请求是否已经恢复正常
#        max-wait-duration-in-half-open-state:
#          seconds:
#        wait-duration-in-open-state: 5s #从OPEN到HALF_OPEN需要等待的时间
#        permitted-number-of-calls-in-half-open-state: 2 #半开状态下允许的最大请求数,默认是10
#        record-exceptions:
#          - java.lang.Exception
#    instances:
#      cloud-provider-payment:
#        base-config: default

#按照时间
resilience4j:
  timelimiter:
    configs:
      default:
        timeout-duration: 100s #timelimiter默认限制远程1s,超过1s就超时异常,配置了降级,走降级处理
#  circuitbreaker:
#    configs:
#      default:
#        failure-rate-threshold: 50
#        sliding-window-type: time_based
#        slow-call-duration-threshold: 2s #慢调用时间阈值,高于这个值的视为慢调用并增加慢调用比例
#        slow-call-rate-threshold: 30 #慢调用百分比峰值
#        sliding-window-size: 2
#        minimum-number-of-calls: 2
#        permitted-number-of-calls-in-half-open-state: 2
#        wait-duration-in-open-state: 5s
#        record-exceptions:
#          - java.lang.Exception
#    instances:
#      cloud-provider-payment:
#        base-config: default
  #最大并发数(bulkhead)
#  bulkhead:
#    configs:
#      default:
#        max-concurrent-calls: 2
#        max-wait-duration: 1s
#    instances:
#      cloud-provider-payment:
#        base-config: default
  #最大并发数(thread-pool-bulkhead)
#  thread-pool-bulkhead:
#    configs:
#      default:
#        max-thread-pool-size: 1
#        core-thread-pool-size: 1
#        queue-capacity: 1
#    instances:
#      cloud-provider-payment:
#        base-config: default
#限流
#resilience4j:
#  ratelimiter:
#    configs:
#      default:
#        limit-for-period: 2
#        limit-refresh-period: 1s
#        timeout-duration: 1s
#    instances:
#      cloud-provider-payment:
#        base-config: default
#


#zipkin
#management:
#  zipkin:
#    tracing:
#      endpoint: http://192.168.1.12:9411/api/v2/spans
#  tracing:
#    sampling:
#      probability: 1.0

